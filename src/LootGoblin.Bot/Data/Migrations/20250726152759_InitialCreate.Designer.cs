// <auto-generated />
using System;
using LootGoblin.Bot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LootGoblin.Bot.Data.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20250726152759_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.EventParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("ExcludedFromLoot")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("TotalParticipation")
                        .HasColumnType("time");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventParticipants", (string)null);
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.GuildEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("CompletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("CompletedBy")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("CreatedBy")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("CurrentState")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("MaximumParticipants")
                        .HasColumnType("int");

                    b.Property<decimal?>("MessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("MinimumParticipantMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("OriginChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTimeOffset?>("StartedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("StartedBy")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("GuildEvents", (string)null);
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.GuildSettings", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("EventChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("EventOrganizerRoleId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("EventParticipantRoleId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("LootChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("GuildSettings", (string)null);
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.LootPile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("CompletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("CompletedBy")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("CreatedBy")
                        .HasColumnType("decimal(20,0)");

                    b.Property<byte>("CurrentStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<byte>("LootType")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("MessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("OriginChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<byte>("RollType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("LootPiles", (string)null);
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.ParticipantSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("EventParticipantId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("ParticipantSessions", (string)null);
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.EventParticipant", b =>
                {
                    b.HasOne("LootGoblin.Bot.Data.Entities.GuildEvent", "Event")
                        .WithMany("EventParticipants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.GuildEvent", b =>
                {
                    b.OwnsMany("LootGoblin.Bot.Data.Entities.GuildEventChannel", "ParticipantChannels", b1 =>
                        {
                            b1.Property<int>("GuildEventId")
                                .HasColumnType("int");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<decimal>("ChannelId")
                                .HasColumnType("decimal(20,0)");

                            b1.HasKey("GuildEventId", "__synthesizedOrdinal");

                            b1.ToTable("GuildEvents");

                            b1.ToJson("ParticipantChannels");

                            b1.WithOwner()
                                .HasForeignKey("GuildEventId");
                        });

                    b.Navigation("ParticipantChannels");
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.LootPile", b =>
                {
                    b.HasOne("LootGoblin.Bot.Data.Entities.GuildEvent", "Event")
                        .WithMany("LootPiles")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.ParticipantSession", b =>
                {
                    b.HasOne("LootGoblin.Bot.Data.Entities.GuildEvent", "Event")
                        .WithMany("ParticipantSessions")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("LootGoblin.Bot.Data.Entities.GuildEvent", b =>
                {
                    b.Navigation("EventParticipants");

                    b.Navigation("LootPiles");

                    b.Navigation("ParticipantSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
